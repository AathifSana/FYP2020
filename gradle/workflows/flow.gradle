def commonProperties = ['retries': 3, 'retry.backoff': 1000]

ext.sparkProperties = { driverCores, driverMemory, executorCores, executorMemory ->
    "driverCores='$driverCores' " +
    "driverMemory='$driverMemory' " +
    "executorCores='$executorCores' " +
    "executorMemory='$executorMemory' "
}

hadoop {
    namespace('Spark') {


        def projectDir = "/home/aathif/Documents/IIT/L6_SE/FYP/Project"
        def resourcesDir = "/home/aathif/Documents/IIT/L6_SE/FYP/Project/src/main/resources"

        workflow('Segmented_Recommendation_Workflow') {

            commandJob('PreProcessing') {
                set properties: commonProperties
                uses "bash $projectDir/scripts/data_preprocessing.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "additionalJars='$projectDir/mysql-connector-java-5.1.48-bin.jar' " +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input='$resourcesDir/intial/Online_Retail.csv' " +
                        "output='$resourcesDir/preprocessed' "

            }

            commandJob('CustomerSegmentation') {
                set properties: commonProperties
                depends 'PreProcessing'
                uses "bash $projectDir/scripts/customer_segmentation.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "additionalJars='$projectDir/mysql-connector-java-5.1.48-bin.jar' " +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input='$resourcesDir/preprocessed' " +
                        "output='$resourcesDir/segments' " +
                        "customers='$resourcesDir/customers' " +
                        "customersWrite='$resourcesDir/customersNew' "

            }

            commandJob('GeneralRecommendation') {
                set properties: commonProperties
                depends 'CustomerSegmentation'
                uses "bash $projectDir/scripts/general_recommendation.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "additionalJars='$projectDir/mysql-connector-java-5.1.48-bin.jar' " +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input='$resourcesDir/preprocessed' " +
                        "output='$resourcesDir/recs/gen' " +
                        "support='0.01' " +
                        "confidence='0.2' " +
                        "inputSeg='$resourcesDir/segments/customer_segments' "

            }

            commandJob('SegmentedRecommendation_for_segment1') {
                set properties: commonProperties
                depends 'GeneralRecommendation'
                uses "bash $projectDir/scripts/segmented_recommendation.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "additionalJars='$projectDir/mysql-connector-java-5.1.48-bin.jar' " +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input='$resourcesDir/preprocessed' " +
                        "output='$resourcesDir/recs/seg1' " +
                        "support='0.01' " +
                        "confidence='0.2' " +
                        "inputSeg='$resourcesDir/segments/customer_segments' " +
                        "segment='1' " +
                        "recFill='$resourcesDir/recs/gen' "

            }

            commandJob('SegmentedRecommendation_for_segment2') {
                set properties: commonProperties
                depends 'SegmentedRecommendation_for_segment1'
                uses "bash $projectDir/scripts/segmented_recommendation.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "additionalJars='$projectDir/mysql-connector-java-5.1.48-bin.jar' " +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input='$resourcesDir/preprocessed' " +
                        "output='$resourcesDir/recs/seg2' " +
                        "support='0.01' " +
                        "confidence='0.2' " +
                        "inputSeg='$resourcesDir/segments/customer_segments' " +
                        "segment='2' " +
                        "recFill='$resourcesDir/recs/gen' "
            }

            targets 'SegmentedRecommendation_for_segment2'
        }

        workflow('Jaccard_Similarity') {

            commandJob('Jaccard_Similarity_Testing1') {
                set properties: commonProperties
                uses "bash $projectDir/scripts/test/jaccard_similarity_job.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input1='$resourcesDir/recs/gen' " +
                        "input2='$resourcesDir/recs/seg1' " +
                        "output='$resourcesDir/jSimlarity/seg1' "

            }

            commandJob('Jaccard_Similarity_Testing2') {
                set properties: commonProperties
                depends 'Jaccard_Similarity_Testing1'
                uses "bash $projectDir/scripts/test/jaccard_similarity_job.sh " +
                        "${sparkProperties(1, '1g', 2, '2g')}" +
                        "artifactLocation='$projectDir/build/libs/FYP_AATHIF-1.0-fatjar.jar' " +
                        "input1='$resourcesDir/recs/gen' " +
                        "input2='$resourcesDir/recs/seg2' " +
                        "output='$resourcesDir/jSimlarity/seg2' "

            }

            targets 'Jaccard_Similarity_Testing2'
        }
    }
}